/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import cliente.Cliente;
import cliente.Transferencia;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class TransferenciasRecebidas extends javax.swing.JFrame {

    /**
     * Creates new form TransferenciasRecebidas
     */
    Transferencia transferenciaSelecionada;
    DefaultListModel modelo;
    List<Transferencia> transfs;
    public static TransferenciasRecebidas transferenciasRecebidas;
    public TransferenciasRecebidas() {
        initComponents();
    }
    public void adicionarElementos() throws IOException, ClassNotFoundException {
        Cliente cliente = new Cliente();
        cliente.cliente(TelaInicial.ipAux, TelaInicial.portaAux);
        cliente.carregarListaTransf(Login.loginCPF);
        transfs = Cliente.transfs;
        listaTransferenciasRecebidas.removeAll();
        modelo = new DefaultListModel();
        if (!transfs.isEmpty()) {
            for (int i = 0; i < transfs.size(); i++) {
                modelo.addElement(transfs.get(i).getDocumento().getId());
            }
        }
        listaTransferenciasRecebidas.setModel(modelo);
        cliente.sair();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        voltar = new javax.swing.JButton();
        aceitar = new javax.swing.JButton();
        recusar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaTransferenciasRecebidas = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela de TransferÃªncias Recebidas");
        setResizable(false);

        voltar.setText("<");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        aceitar.setText("Aceitar");
        aceitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceitarActionPerformed(evt);
            }
        });

        recusar.setText("Recusar");
        recusar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recusarActionPerformed(evt);
            }
        });

        listaTransferenciasRecebidas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaTransferenciasRecebidas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(voltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(aceitar)
                        .addGap(56, 56, 56)
                        .addComponent(recusar)))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(voltar)
                    .addComponent(aceitar)
                    .addComponent(recusar))
                .addGap(46, 46, 46))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void aceitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceitarActionPerformed
        Cliente cliente = new Cliente();
        transferenciaSelecionada = transfs.get(listaTransferenciasRecebidas.getSelectedIndex());
        String[] ids;
        ids = transferenciaSelecionada.getDocumento().getId().split("/");
        try {
            cliente.cliente(TelaInicial.ipAux, TelaInicial.portaAux);
            String resultado = cliente.cadastrarDocumento(Login.loginCPF,transferenciaSelecionada.getDocumento().getTexto(), ids[0], ids[1]);
            if(!resultado.equals("Cadastro efetuado com sucesso")){
                JOptionPane.showMessageDialog(null, resultado);
            }else{
                
                JOptionPane.showMessageDialog(null, resultado + "\nVerifique na sua lista de documentos.");
                MenuCidadao.menucidadao = new MenuCidadao();
                this.setVisible(false);
                MenuCidadao.menucidadao.setVisible(true);
            }
        } catch (IOException ex) {
            Logger.getLogger(CadastroDocumentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        cliente.sair();
    }//GEN-LAST:event_aceitarActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        MenuCidadao.menucidadao = new MenuCidadao();
        this.setVisible(false);
        MenuCidadao.menucidadao.setVisible(true);
    }//GEN-LAST:event_voltarActionPerformed

    private void recusarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recusarActionPerformed
        Cliente cliente = new Cliente();
        try {
            cliente.cliente(TelaInicial.ipAux, TelaInicial.portaAux);
            String resultado = cliente.recusarTransferencia(transferenciaSelecionada);
        } catch (IOException ex) {
            Logger.getLogger(TransferenciasRecebidas.class.getName()).log(Level.SEVERE, null, ex);
        }
        cliente.sair();
    }//GEN-LAST:event_recusarActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceitar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaTransferenciasRecebidas;
    private javax.swing.JButton recusar;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
